
import { ServerData } from "@/components/ServerCard";

export const filterCategories = [
  {
    name: "Programming Language",
    options: ["TypeScript", "Python", "Go", "Rust", "C#", "Java"],
  },
  {
    name: "Deployment",
    options: ["Cloud", "Local", "Both"],
  },
  {
    name: "Implementation",
    options: ["Official", "Community"],
  },
  {
    name: "Status",
    options: ["Stable", "Experimental"],
  },
  {
    name: "Category",
    options: [
      "Browser Automation",
      "Art & Culture",
      "Cloud Platforms",
      "Command Line",
      "Communication",
      "Customer Data Platforms",
      "Databases",
      "Developer Tools",
      "File Systems",
      "Finance & Fintech",
      "Knowledge & Memory",
      "Location Services",
      "Marketing",
      "Monitoring",
      "Search",
      "Security",
      "Travel & Transportation",
      "Version Control",
      "Other"
    ],
  },
  {
    name: "Operating System",
    options: ["macOS", "Windows", "Linux"],
  },
  {
    name: "Last Updated",
    options: ["This week", "This month", "This quarter", "This year"],
  },
];

export const mockServers: ServerData[] = [
  {
    id: "1",
    name: "mcp-server",
    description: "The official Model Context Protocol server implementation. Supports TypeScript, JavaScript, and Node.js applications.",
    stars: 4853,
    forks: 412,
    language: "TypeScript",
    tags: ["official", "nodejs", "typescript", "streaming"],
    owner: "modelcontextprotocol",
    lastUpdated: "2 days ago",
    category: "Official",
    implementation: "official",
    deploymentType: "both",
    os: ["macos", "windows", "linux"],
    repoUrl: "https://github.com/modelcontextprotocol/mcp-server",
    status: "stable",
    categories: ["Developer Tools", "Communication"],
    programmingLanguage: "typescript"
  },
  {
    id: "2",
    name: "mcp-python",
    description: "Python implementation of Model Context Protocol with first-class support for HuggingFace models and seamless PyTorch integration.",
    stars: 2873,
    forks: 342,
    language: "Python",
    tags: ["python", "huggingface", "pytorch", "transformers"],
    owner: "modelcontextprotocol",
    lastUpdated: "4 days ago",
    category: "Official",
    implementation: "official",
    deploymentType: "local",
    os: ["linux", "macos", "windows"],
    repoUrl: "https://github.com/modelcontextprotocol/mcp-python",
    status: "stable",
    categories: ["Developer Tools", "Machine Learning"],
    programmingLanguage: "python"
  },
  {
    id: "3",
    name: "mcp-go",
    description: "High-performance Go implementation of the Model Context Protocol with advanced concurrency support and minimal dependencies.",
    stars: 1845,
    forks: 176,
    language: "Go",
    tags: ["golang", "performance", "concurrency"],
    owner: "modelcontextprotocol",
    lastUpdated: "1 week ago",
    category: "Official",
    implementation: "official",
    deploymentType: "cloud",
    os: ["linux", "macos"],
    repoUrl: "https://github.com/modelcontextprotocol/mcp-go",
    status: "stable",
    categories: ["Developer Tools", "Cloud Platforms"],
    programmingLanguage: "go"
  },
  {
    id: "4",
    name: "mcp-rust",
    description: "Blazingly fast Rust implementation of MCP with memory safety guarantees and minimal resource consumption.",
    stars: 3421,
    forks: 323,
    language: "Rust",
    tags: ["rust", "performance", "memory-safe", "low-level"],
    owner: "modelcontextprotocol",
    lastUpdated: "5 days ago",
    category: "Official",
    implementation: "official",
    deploymentType: "both",
    os: ["linux", "macos", "windows"],
    repoUrl: "https://github.com/modelcontextprotocol/mcp-rust",
    status: "stable",
    categories: ["Developer Tools"],
    programmingLanguage: "rust"
  },
  {
    id: "5",
    name: "server-puppeteer",
    description: "Browser automation for web scraping and interaction. Enables AI models to control web browsers securely.",
    stars: 1820,
    forks: 145,
    language: "TypeScript",
    tags: ["browser", "automation", "puppeteer", "scraping"],
    owner: "modelcontextprotocol",
    lastUpdated: "4 days ago",
    category: "Official",
    implementation: "official",
    deploymentType: "local",
    os: ["linux", "macos", "windows"],
    repoUrl: "https://github.com/modelcontextprotocol/servers/tree/main/src/puppeteer",
    status: "stable",
    categories: ["Browser Automation"],
    programmingLanguage: "typescript"
  },
  {
    id: "6",
    name: "rijksmuseum-mcp",
    description: "Rijksmuseum API integration for artwork search, details, and collections exploration through MCP.",
    stars: 562,
    forks: 48,
    language: "TypeScript",
    tags: ["art", "museum", "api", "culture"],
    owner: "r-huijts",
    lastUpdated: "2 weeks ago",
    category: "Community",
    implementation: "community",
    deploymentType: "cloud",
    repoUrl: "https://github.com/r-huijts/rijksmuseum-mcp",
    status: "stable",
    categories: ["Art & Culture"],
    programmingLanguage: "typescript"
  },
  {
    id: "7",
    name: "mcp-server-kubernetes",
    description: "Kubernetes cluster operations through MCP protocol, enabling AI models to manage containerized applications.",
    stars: 842,
    forks: 103,
    language: "Go",
    tags: ["kubernetes", "k8s", "cloud", "containers"],
    owner: "strowk",
    lastUpdated: "5 days ago",
    category: "Community",
    implementation: "community",
    deploymentType: "cloud",
    repoUrl: "https://github.com/strowk/mcp-k8s-go",
    status: "stable",
    categories: ["Cloud Platforms"],
    programmingLanguage: "go"
  },
  {
    id: "8",
    name: "iterm-mcp",
    description: "Model Context Protocol server providing access to iTerm. Run commands and ask questions about terminal output.",
    stars: 726,
    forks: 86,
    language: "TypeScript", 
    tags: ["terminal", "iterm", "command-line", "macos"],
    owner: "ferrislucas",
    lastUpdated: "1 week ago",
    category: "Community",
    implementation: "community",
    deploymentType: "local",
    os: ["macos"],
    repoUrl: "https://github.com/ferrislucas/iterm-mcp",
    status: "stable",
    categories: ["Command Line"],
    programmingLanguage: "typescript"
  },
  {
    id: "9",
    name: "server-postgres",
    description: "PostgreSQL database integration with schema inspection and query capabilities through MCP.",
    stars: 1932,
    forks: 241,
    language: "TypeScript",
    tags: ["database", "postgres", "sql", "query"],
    owner: "modelcontextprotocol",
    lastUpdated: "3 days ago",
    category: "Official",
    implementation: "official",
    deploymentType: "local",
    os: ["linux", "macos", "windows"],
    repoUrl: "https://github.com/modelcontextprotocol/servers/tree/main/src/postgres",
    status: "stable",
    categories: ["Databases"],
    programmingLanguage: "typescript"
  },
  {
    id: "10",
    name: "server-filesystem",
    description: "Direct local file system access with configurable permissions through MCP protocol.",
    stars: 2187,
    forks: 264,
    language: "TypeScript",
    tags: ["filesystem", "files", "local", "io"],
    owner: "modelcontextprotocol",
    lastUpdated: "2 days ago",
    category: "Official",
    implementation: "official",
    deploymentType: "local",
    os: ["linux", "macos", "windows"],
    repoUrl: "https://github.com/modelcontextprotocol/servers/tree/main/src/filesystem",
    status: "stable",
    categories: ["File Systems"],
    programmingLanguage: "typescript"
  },
  {
    id: "11",
    name: "coincap-mcp",
    description: "Real-time cryptocurrency market data integration using CoinCap's public API through MCP protocol.",
    stars: 683,
    forks: 74,
    language: "TypeScript",
    tags: ["cryptocurrency", "finance", "market-data", "api"],
    owner: "quantgeekdev",
    lastUpdated: "1 week ago",
    category: "Community",
    implementation: "community",
    deploymentType: "cloud",
    repoUrl: "https://github.com/QuantGeekDev/coincap-mcp",
    status: "stable",
    categories: ["Finance & Fintech"],
    programmingLanguage: "typescript"
  },
  {
    id: "12",
    name: "mcp-memory",
    description: "Long-term memory and knowledge management system for AI models using vector storage and retrieval.",
    stars: 1237,
    forks: 145,
    language: "TypeScript",
    tags: ["memory", "vector-db", "embeddings", "retrieval"],
    owner: "memgpt",
    lastUpdated: "6 days ago",
    category: "Community",
    implementation: "community",
    deploymentType: "both",
    os: ["linux", "macos", "windows"],
    repoUrl: "https://github.com/memgpt/mcp-memory",
    status: "stable",
    categories: ["Knowledge & Memory"],
    programmingLanguage: "typescript"
  },
  {
    id: "13",
    name: "supabase-mcp",
    description: "Supabase integration for MCP allowing AI models to interact with PostgreSQL databases, authentication, and storage.",
    stars: 873,
    forks: 92,
    language: "TypeScript",
    tags: ["supabase", "postgres", "auth", "storage"],
    owner: "supabase-community",
    lastUpdated: "8 days ago",
    category: "Community",
    implementation: "community",
    deploymentType: "cloud",
    repoUrl: "https://github.com/supabase-community/supabase-mcp",
    status: "stable",
    categories: ["Databases", "Cloud Platforms"],
    programmingLanguage: "typescript"
  },
  {
    id: "14",
    name: "server-stripe",
    description: "Stripe payment processing integration for MCP servers, allowing AI models to handle payments securely.",
    stars: 731,
    forks: 81,
    language: "TypeScript",
    tags: ["payments", "stripe", "e-commerce", "finance"],
    owner: "modelcontextprotocol-community",
    lastUpdated: "10 days ago",
    category: "Community",
    implementation: "community",
    deploymentType: "cloud",
    repoUrl: "https://github.com/modelcontextprotocol-community/server-stripe",
    status: "stable",
    categories: ["Finance & Fintech"],
    programmingLanguage: "typescript"
  },
  {
    id: "15",
    name: "segment-mcp",
    description: "Segment CDP integration for MCP, enabling AI models to track user events and manage customer data.",
    stars: 542,
    forks: 47,
    language: "TypeScript",
    tags: ["analytics", "segment", "tracking", "cdp"],
    owner: "segmentio-community",
    lastUpdated: "2 weeks ago",
    category: "Community",
    implementation: "community",
    deploymentType: "cloud",
    repoUrl: "https://github.com/segmentio-community/segment-mcp",
    status: "stable",
    categories: ["Customer Data Platforms", "Marketing"],
    programmingLanguage: "typescript"
  },
  {
    id: "16",
    name: "github-mcp",
    description: "GitHub integration for MCP, allowing AI models to create PRs, manage issues, and interact with repositories.",
    stars: 1432,
    forks: 176,
    language: "TypeScript",
    tags: ["github", "git", "version-control", "developer-tools"],
    owner: "octokit-community",
    lastUpdated: "4 days ago",
    category: "Community",
    implementation: "community",
    deploymentType: "both",
    os: ["linux", "macos", "windows"],
    repoUrl: "https://github.com/octokit-community/github-mcp",
    status: "stable",
    categories: ["Version Control", "Developer Tools"],
    programmingLanguage: "typescript"
  },
  {
    id: "17",
    name: "google-maps-mcp",
    description: "Google Maps integration for MCP, providing location search, directions, and geospatial data analysis.",
    stars: 892,
    forks: 97,
    language: "TypeScript",
    tags: ["maps", "geospatial", "location", "directions"],
    owner: "mapkit-community",
    lastUpdated: "1 week ago",
    category: "Community",
    implementation: "community",
    deploymentType: "cloud",
    repoUrl: "https://github.com/mapkit-community/google-maps-mcp",
    status: "stable",
    categories: ["Location Services", "Travel & Transportation"],
    programmingLanguage: "typescript"
  },
  {
    id: "18",
    name: "csharp-mcp",
    description: "C# implementation of MCP server with .NET Core integration, ideal for Windows and Azure environments.",
    stars: 783,
    forks: 92,
    language: "C#",
    tags: ["csharp", "dotnet", "windows", "azure"],
    owner: "dotnet-community",
    lastUpdated: "9 days ago",
    category: "Community",
    implementation: "community",
    deploymentType: "both",
    os: ["windows", "linux"],
    repoUrl: "https://github.com/dotnet-community/csharp-mcp",
    status: "stable",
    categories: ["Developer Tools"],
    programmingLanguage: "csharp"
  },
  {
    id: "19",
    name: "algolia-mcp",
    description: "Algolia search integration for MCP, enabling AI models to perform powerful, typo-tolerant search operations.",
    stars: 642,
    forks: 73,
    language: "TypeScript",
    tags: ["search", "algolia", "instant-search", "faceting"],
    owner: "algolia-community",
    lastUpdated: "12 days ago",
    category: "Community",
    implementation: "community",
    deploymentType: "cloud",
    repoUrl: "https://github.com/algolia-community/algolia-mcp",
    status: "stable",
    categories: ["Search"],
    programmingLanguage: "typescript"
  },
  {
    id: "20",
    name: "cloudflare-mcp",
    description: "Cloudflare integration for MCP, providing CDN management, DNS configuration, and security controls.",
    stars: 523,
    forks: 62,
    language: "TypeScript",
    tags: ["cloudflare", "cdn", "dns", "security"],
    owner: "cloudflare-community",
    lastUpdated: "2 weeks ago",
    category: "Community",
    implementation: "community",
    deploymentType: "cloud",
    repoUrl: "https://github.com/cloudflare-community/cloudflare-mcp",
    status: "stable",
    categories: ["Security", "Cloud Platforms"],
    programmingLanguage: "typescript"
  },
  {
    id: "21",
    name: "datadog-mcp",
    description: "Datadog integration for MCP, allowing AI models to monitor application performance and set up alerts.",
    stars: 487,
    forks: 43,
    language: "TypeScript",
    tags: ["monitoring", "apm", "metrics", "observability"],
    owner: "datadog-community",
    lastUpdated: "2 weeks ago",
    category: "Community",
    implementation: "community",
    deploymentType: "cloud",
    repoUrl: "https://github.com/datadog-community/datadog-mcp",
    status: "stable",
    categories: ["Monitoring"],
    programmingLanguage: "typescript"
  },
  {
    id: "22",
    name: "server-llama3",
    description: "MCP server optimized for Llama 3 models with efficient token usage and advanced context handling.",
    stars: 2342,
    forks: 278,
    language: "Python",
    tags: ["llama", "llm", "meta", "inference"],
    owner: "meta-llama-community",
    lastUpdated: "3 days ago",
    category: "Community",
    implementation: "community",
    deploymentType: "local",
    os: ["linux", "macos"],
    repoUrl: "https://github.com/meta-llama-community/server-llama3",
    status: "experimental",
    categories: ["Developer Tools"],
    programmingLanguage: "python"
  },
  {
    id: "23",
    name: "server-ollama",
    description: "Ollama integration for MCP, enabling easy local deployment of various LLMs through Ollama's runtime.",
    stars: 1873,
    forks: 213,
    language: "Go",
    tags: ["ollama", "local-llm", "inference", "multimodal"],
    owner: "ollama-community",
    lastUpdated: "1 week ago",
    category: "Community",
    implementation: "community",
    deploymentType: "local",
    os: ["linux", "macos", "windows"],
    repoUrl: "https://github.com/ollama-community/server-ollama",
    status: "stable",
    categories: ["Developer Tools"],
    programmingLanguage: "go"
  },
  {
    id: "24",
    name: "server-openai",
    description: "OpenAI API integration for MCP with support for GPT models, embeddings, and function calling.",
    stars: 3452,
    forks: 421,
    language: "TypeScript",
    tags: ["openai", "gpt", "api", "cloud"],
    owner: "modelcontextprotocol",
    lastUpdated: "2 days ago",
    category: "Official",
    implementation: "official",
    deploymentType: "cloud",
    repoUrl: "https://github.com/modelcontextprotocol/server-openai",
    status: "stable",
    categories: ["Developer Tools", "Cloud Platforms"],
    programmingLanguage: "typescript"
  },
  {
    id: "25",
    name: "server-claude",
    description: "Anthropic Claude API integration for MCP with advanced prompt engineering and context handling.",
    stars: 1782,
    forks: 197,
    language: "TypeScript",
    tags: ["anthropic", "claude", "api", "cloud"],
    owner: "anthropic-community",
    lastUpdated: "5 days ago",
    category: "Community",
    implementation: "community",
    deploymentType: "cloud",
    repoUrl: "https://github.com/anthropic-community/server-claude",
    status: "stable",
    categories: ["Developer Tools", "Cloud Platforms"],
    programmingLanguage: "typescript"
  }
];
