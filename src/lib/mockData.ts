
import { ServerData } from "@/components/ServerCard";

export const filterCategories = [
  {
    name: "Language",
    options: ["JavaScript", "Python", "Rust", "Go", "TypeScript", "C++", "Java"],
  },
  {
    name: "Features",
    options: ["Streaming", "Multi-Model", "Custom Models", "Authentication", "Rate Limiting", "Metrics"],
  },
  {
    name: "Category",
    options: ["Open Source", "Community", "Enterprise", "Research", "Official"],
  },
  {
    name: "Last Updated",
    options: ["This week", "This month", "This quarter", "This year"],
  },
];

export const mockServers: ServerData[] = [
  {
    id: "1",
    name: "simple-mcp-server",
    description: "A lightweight and fast MCP server implementation with streaming support for multiple models.",
    stars: 3241,
    forks: 321,
    language: "TypeScript",
    tags: ["javascript", "streaming", "multi-model"],
    owner: "acme-ai",
    lastUpdated: "3 days ago",
    category: "Open Source",
  },
  {
    id: "2",
    name: "mcp-python",
    description: "Python implementation of MCP protocol with first-class support for HuggingFace models.",
    stars: 2156,
    forks: 198,
    language: "Python",
    tags: ["python", "huggingface", "pytorch"],
    owner: "hf-community",
    lastUpdated: "1 week ago",
    category: "Community",
  },
  {
    id: "3",
    name: "enterprise-mcp",
    description: "Enterprise-grade MCP server with advanced security, rate limiting and monitoring features.",
    stars: 1852,
    forks: 103,
    language: "Go",
    tags: ["golang", "enterprise", "security"],
    owner: "cloudcorp",
    lastUpdated: "2 days ago",
    category: "Enterprise",
  },
  {
    id: "4",
    name: "rust-mcp",
    description: "High-performance MCP implementation in Rust with minimal dependencies and memory footprint.",
    stars: 4210,
    forks: 385,
    language: "Rust",
    tags: ["rust", "performance", "minimal"],
    owner: "rustacean",
    lastUpdated: "5 days ago",
    category: "Open Source",
  },
  {
    id: "5",
    name: "mcp-research",
    description: "Research-focused MCP server enabling easy experimentation with model parameters and architectures.",
    stars: 976,
    forks: 87,
    language: "Python",
    tags: ["research", "experimental", "customizable"],
    owner: "research-lab",
    lastUpdated: "2 weeks ago",
    category: "Research",
  },
  {
    id: "6",
    name: "official-mcp-ref",
    description: "Official reference implementation of the MCP protocol specification.",
    stars: 5632,
    forks: 845,
    language: "TypeScript",
    tags: ["official", "reference", "specification"],
    owner: "mcp-foundation",
    lastUpdated: "1 day ago",
    category: "Official",
  },
  {
    id: "7",
    name: "mcp-java",
    description: "Java implementation of MCP server with Spring Boot integration for enterprise deployments.",
    stars: 1243,
    forks: 156,
    language: "Java",
    tags: ["java", "spring", "enterprise"],
    owner: "java-team",
    lastUpdated: "1 week ago",
    category: "Enterprise",
  },
  {
    id: "8",
    name: "mcp-cpp",
    description: "Ultra-low latency C++ implementation of MCP server optimized for high-throughput applications.",
    stars: 2876,
    forks: 213,
    language: "C++",
    tags: ["c++", "performance", "low-latency"],
    owner: "performance-labs",
    lastUpdated: "3 days ago",
    category: "Open Source",
  },
];
