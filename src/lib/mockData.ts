
import { ServerData } from "@/components/ServerCard";

export const filterCategories = [
  {
    name: "Programming Language",
    options: ["TypeScript", "Python", "Go", "Rust", "C#", "Java"],
  },
  {
    name: "Deployment",
    options: ["Cloud", "Local", "Both"],
  },
  {
    name: "Implementation",
    options: ["Official", "Community"],
  },
  {
    name: "Status",
    options: ["Stable", "Experimental"],
  },
  {
    name: "Category",
    options: [
      "Browser Automation",
      "Art & Culture",
      "Cloud Platforms",
      "Command Line",
      "Communication",
      "Customer Data Platforms",
      "Databases",
      "Developer Tools",
      "File Systems",
      "Finance & Fintech",
      "Knowledge & Memory",
      "Location Services",
      "Marketing",
      "Monitoring",
      "Search",
      "Security",
      "Travel & Transportation",
      "Version Control",
      "Other"
    ],
  },
  {
    name: "Operating System",
    options: ["macOS", "Windows", "Linux"],
  },
  {
    name: "Last Updated",
    options: ["This week", "This month", "This quarter", "This year"],
  },
];

export const mockServers: ServerData[] = [
  {
    id: "1",
    name: "simple-mcp-server",
    description: "A lightweight and fast MCP server implementation with streaming support for multiple models.",
    stars: 3241,
    forks: 321,
    language: "TypeScript",
    tags: ["javascript", "streaming", "multi-model"],
    owner: "acme-ai",
    lastUpdated: "3 days ago",
    category: "Open Source",
    // New fields
    implementation: "community",
    deploymentType: "both",
    os: ["macos", "windows", "linux"],
    repoUrl: "https://github.com/acme-ai/simple-mcp-server",
    status: "stable",
    categories: ["Developer Tools", "Communication"],
    programmingLanguage: "typescript"
  },
  {
    id: "2",
    name: "mcp-python",
    description: "Python implementation of MCP protocol with first-class support for HuggingFace models.",
    stars: 2156,
    forks: 198,
    language: "Python",
    tags: ["python", "huggingface", "pytorch"],
    owner: "hf-community",
    lastUpdated: "1 week ago",
    category: "Community",
    implementation: "community",
    deploymentType: "local",
    os: ["linux", "macos"],
    repoUrl: "https://github.com/hf-community/mcp-python",
    status: "stable",
    categories: ["Developer Tools", "Machine Learning"],
    programmingLanguage: "python"
  },
  {
    id: "3",
    name: "enterprise-mcp",
    description: "Enterprise-grade MCP server with advanced security, rate limiting and monitoring features.",
    stars: 1852,
    forks: 103,
    language: "Go",
    tags: ["golang", "enterprise", "security"],
    owner: "cloudcorp",
    lastUpdated: "2 days ago",
    category: "Enterprise",
    implementation: "official",
    deploymentType: "cloud",
    repoUrl: "https://github.com/cloudcorp/enterprise-mcp",
    status: "stable",
    categories: ["Monitoring", "Security"],
    programmingLanguage: "go"
  },
  {
    id: "4",
    name: "rust-mcp",
    description: "High-performance MCP implementation in Rust with minimal dependencies and memory footprint.",
    stars: 4210,
    forks: 385,
    language: "Rust",
    tags: ["rust", "performance", "minimal"],
    owner: "rustacean",
    lastUpdated: "5 days ago",
    category: "Open Source",
    implementation: "community",
    deploymentType: "local",
    os: ["linux", "macos", "windows"],
    repoUrl: "https://github.com/rustacean/rust-mcp",
    status: "experimental",
    categories: ["Developer Tools"],
    programmingLanguage: "rust"
  },
  {
    id: "5",
    name: "mcp-research",
    description: "Research-focused MCP server enabling easy experimentation with model parameters and architectures.",
    stars: 976,
    forks: 87,
    language: "Python",
    tags: ["research", "experimental", "customizable"],
    owner: "research-lab",
    lastUpdated: "2 weeks ago",
    category: "Research",
    implementation: "community",
    deploymentType: "local",
    os: ["linux", "macos"],
    repoUrl: "https://github.com/research-lab/mcp-research",
    status: "experimental",
    categories: ["Developer Tools", "Machine Learning"],
    programmingLanguage: "python"
  },
  {
    id: "6",
    name: "official-mcp-ref",
    description: "Official reference implementation of the MCP protocol specification.",
    stars: 5632,
    forks: 845,
    language: "TypeScript",
    tags: ["official", "reference", "specification"],
    owner: "mcp-foundation",
    lastUpdated: "1 day ago",
    category: "Official",
    implementation: "official",
    deploymentType: "both",
    os: ["linux", "macos", "windows"],
    repoUrl: "https://github.com/mcp-foundation/official-mcp-ref",
    status: "stable",
    categories: ["Developer Tools"],
    programmingLanguage: "typescript"
  },
  {
    id: "7",
    name: "mcp-java",
    description: "Java implementation of MCP server with Spring Boot integration for enterprise deployments.",
    stars: 1243,
    forks: 156,
    language: "Java",
    tags: ["java", "spring", "enterprise"],
    owner: "java-team",
    lastUpdated: "1 week ago",
    category: "Enterprise",
    implementation: "community",
    deploymentType: "cloud",
    repoUrl: "https://github.com/java-team/mcp-java",
    status: "stable",
    categories: ["Enterprise", "Developer Tools"],
    programmingLanguage: "java"
  },
  {
    id: "8",
    name: "mcp-cpp",
    description: "Ultra-low latency C++ implementation of MCP server optimized for high-throughput applications.",
    stars: 2876,
    forks: 213,
    language: "C++",
    tags: ["c++", "performance", "low-latency"],
    owner: "performance-labs",
    lastUpdated: "3 days ago",
    category: "Open Source",
    implementation: "community",
    deploymentType: "local",
    os: ["linux"],
    repoUrl: "https://github.com/performance-labs/mcp-cpp",
    status: "stable",
    categories: ["Developer Tools"],
    programmingLanguage: "other"
  },
  {
    id: "9",
    name: "server-puppeteer",
    description: "Browser automation for web scraping and interaction. Enables AI models to control web browsers securely.",
    stars: 1820,
    forks: 145,
    language: "TypeScript",
    tags: ["browser", "automation", "puppeteer", "scraping"],
    owner: "modelcontextprotocol",
    lastUpdated: "4 days ago",
    category: "Official",
    implementation: "official",
    deploymentType: "local",
    os: ["linux", "macos", "windows"],
    repoUrl: "https://github.com/modelcontextprotocol/servers/tree/main/src/puppeteer",
    status: "stable",
    categories: ["Browser Automation"],
    programmingLanguage: "typescript"
  },
  {
    id: "10",
    name: "rijksmuseum-mcp",
    description: "Rijksmuseum API integration for artwork search, details, and collections exploration through MCP.",
    stars: 562,
    forks: 48,
    language: "TypeScript",
    tags: ["art", "museum", "api", "culture"],
    owner: "r-huijts",
    lastUpdated: "2 weeks ago",
    category: "Community",
    implementation: "community",
    deploymentType: "cloud",
    repoUrl: "https://github.com/r-huijts/rijksmuseum-mcp",
    status: "stable",
    categories: ["Art & Culture"],
    programmingLanguage: "typescript"
  },
  {
    id: "11",
    name: "mcp-server-kubernetes",
    description: "Kubernetes cluster operations through MCP protocol, enabling AI models to manage containerized applications.",
    stars: 842,
    forks: 103,
    language: "Go",
    tags: ["kubernetes", "k8s", "cloud", "containers"],
    owner: "strowk",
    lastUpdated: "5 days ago",
    category: "Community",
    implementation: "community",
    deploymentType: "cloud",
    repoUrl: "https://github.com/strowk/mcp-k8s-go",
    status: "stable",
    categories: ["Cloud Platforms"],
    programmingLanguage: "go"
  },
  {
    id: "12",
    name: "iterm-mcp",
    description: "Model Context Protocol server providing access to iTerm. Run commands and ask questions about terminal output.",
    stars: 726,
    forks: 86,
    language: "TypeScript", 
    tags: ["terminal", "iterm", "command-line", "macos"],
    owner: "ferrislucas",
    lastUpdated: "1 week ago",
    category: "Community",
    implementation: "community",
    deploymentType: "local",
    os: ["macos"],
    repoUrl: "https://github.com/ferrislucas/iterm-mcp",
    status: "stable",
    categories: ["Command Line"],
    programmingLanguage: "typescript"
  },
  {
    id: "13",
    name: "server-postgres",
    description: "PostgreSQL database integration with schema inspection and query capabilities through MCP.",
    stars: 1932,
    forks: 241,
    language: "TypeScript",
    tags: ["database", "postgres", "sql", "query"],
    owner: "modelcontextprotocol",
    lastUpdated: "3 days ago",
    category: "Official",
    implementation: "official",
    deploymentType: "local",
    os: ["linux", "macos", "windows"],
    repoUrl: "https://github.com/modelcontextprotocol/servers/tree/main/src/postgres",
    status: "stable",
    categories: ["Databases"],
    programmingLanguage: "typescript"
  },
  {
    id: "14",
    name: "server-filesystem",
    description: "Direct local file system access with configurable permissions through MCP protocol.",
    stars: 2187,
    forks: 264,
    language: "TypeScript",
    tags: ["filesystem", "files", "local", "io"],
    owner: "modelcontextprotocol",
    lastUpdated: "2 days ago",
    category: "Official",
    implementation: "official",
    deploymentType: "local",
    os: ["linux", "macos", "windows"],
    repoUrl: "https://github.com/modelcontextprotocol/servers/tree/main/src/filesystem",
    status: "stable",
    categories: ["File Systems"],
    programmingLanguage: "typescript"
  },
  {
    id: "15",
    name: "coincap-mcp",
    description: "Real-time cryptocurrency market data integration using CoinCap's public API through MCP protocol.",
    stars: 683,
    forks: 74,
    language: "TypeScript",
    tags: ["cryptocurrency", "finance", "market-data", "api"],
    owner: "quantgeekdev",
    lastUpdated: "1 week ago",
    category: "Community",
    implementation: "community",
    deploymentType: "cloud",
    repoUrl: "https://github.com/QuantGeekDev/coincap-mcp",
    status: "stable",
    categories: ["Finance & Fintech"],
    programmingLanguage: "typescript"
  },
];
